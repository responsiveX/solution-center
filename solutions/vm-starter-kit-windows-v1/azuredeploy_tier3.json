{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "bastionName": {
      "type": "string",
      "defaultValue": "BastionHost"
    },
    "networkName": {
      "type": "string",
      "defaultValue": "VmStarterKit"
    },
    "vmSubnetName": {
      "type": "string",
      "defaultValue": "VMs"
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "VM"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v5"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "secureString"
    },
    "recoveryServicesVaultName": {
      "type": "string",
      "defaultValue": "rsv-VmBackupVault"
    },
    "loadBalancerName": {
      "type": "string",
      "defaultValue": "lbe-LoadBalancer"
    },
    "loadBalancerIpAddressName": {
      "type": "string",
      "defaultValue": "pip-LoadBalancer"
    }
  },
  "functions": [],
  "variables": {
    "recoveryVaultPolicyName": "DefaultPolicy",
    "loadBalancerFrontEndName": "LoadBalancerFrontEnd",
    "loadBalancerBackendPoolName": "LoadBalancerBackEndPool",
    "loadBalancerProbeName80": "loadBalancerHealthProbePort80",
    "loadBalancerProbeName443": "loadBalancerHealthProbePort443",
    "vmScaleSetName": "vmss-VmStarterKit"
  },
  "resources": [
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2022-10-01",
      "name": "[parameters('recoveryServicesVaultName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "properties": {
        "publicNetworkAccess": "Disabled"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-07-01",
      "name": "[parameters('loadBalancerIpAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2021-08-01",
      "name": "[parameters('loadBalancerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('loadBalancerFrontEndName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('loadBalancerIpAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('loadBalancerBackendPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "HTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), variables('loadBalancerFrontEndName'))]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), variables('loadBalancerBackendPoolName'))]"
              },
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "protocol": "Tcp",
              "disableOutboundSnat": true,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('loadBalancerName'), variables('loadBalancerProbeName80'))]"
              }
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), variables('loadBalancerFrontEndName'))]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), variables('loadBalancerBackendPoolName'))]"
              },
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "protocol": "Tcp",
              "disableOutboundSnat": true,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('loadBalancerName'), variables('loadBalancerProbeName443'))]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('loadBalancerProbeName80')]",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 3
            }
          },
          {
            "name": "[variables('loadBalancerProbeName443')]",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 3
            }
          }
        ],
        "outboundRules": [
          {
            "name": "AllowOutboundTraffic",
            "properties": {
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), variables('loadBalancerBackendPoolName'))]"
              },
              "frontendIPConfigurations": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), variables('loadBalancerFrontEndName'))]"
                }
              ],
              "protocol": "All",
              "enableTcpReset": false,
              "idleTimeoutInMinutes": 5,
              "allocatedOutboundPorts": 128
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('loadBalancerIpAddressName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vnet-with-bastion",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "networkName": {
            "value": "[parameters('networkName')]"
          },
          "vmSubnetName": {
            "value": "[parameters('vmSubnetName')]"
          },
          "bastionName": {
            "value": "[parameters('bastionName')]"
          },
          "openWebPorts": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "networkName": {
              "type": "string",
              "defaultValue": "VmStarterKit"
            },
            "vmSubnetName": {
              "type": "string",
              "defaultValue": "VMs"
            },
            "bastionName": {
              "type": "string",
              "defaultValue": "BastionHost"
            },
            "openWebPorts": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "functions": [],
          "variables": {
            "vNetName": "[format('vnet-{0}', parameters('networkName'))]",
            "vNetAddressPrefix": "10.1.0.0/16",
            "bastionSubnetAddressPrefix": "10.1.0.0/24",
            "vmSubnetAddressPrefix": "10.1.1.0/24",
            "bastionHostName": "[format('bas-{0}', parameters('bastionName'))]",
            "bastionIpAddressName": "[format('pip-{0}', parameters('bastionName'))]",
            "nsgName": "[format('nsg-subnet-{0}', parameters('vmSubnetName'))]",
            "bastionSubnetName": "AzureBastionSubnet"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-07-01",
              "name": "[variables('nsgName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": "[if(equals(parameters('openWebPorts'), false()), createArray(), createArray(createObject('name', 'AllowHttpInbound', 'properties', createObject('protocol', '*', 'sourcePortRange', '*', 'destinationPortRange', '80', 'sourceAddressPrefix', 'Internet', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 100, 'direction', 'Inbound')), createObject('name', 'AllowHttpsInbound', 'properties', createObject('protocol', '*', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', 'Internet', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 101, 'direction', 'Inbound'))))]"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-07-01",
              "name": "[variables('vNetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('vNetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('bastionSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('bastionSubnetAddressPrefix')]",
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[parameters('vmSubnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('vmSubnetAddressPrefix')]",
                      "privateEndpointNetworkPolicies": "Disabled",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-07-01",
              "name": "[variables('bastionIpAddressName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2022-07-01",
              "name": "[variables('bastionHostName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig01",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionIpAddressName'))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('bastionSubnetName'))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionIpAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
              ]
            }
          ],
          "outputs": {
            "vNetName": {
              "type": "string",
              "value": "[variables('vNetName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "monitoring-infrastructure",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": "[format('stvmlogs{0}', uniqueString(resourceGroup().id))]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "defaultValue": "log-VmInsights"
            },
            "logAnalyticsSku": {
              "type": "string",
              "defaultValue": "PerGB2018",
              "allowedValues": [
                "CapacityReservation",
                "Free",
                "LACluster",
                "PerGB2018",
                "PerNode",
                "Premium",
                "Standalone",
                "Standard"
              ]
            },
            "logAnalyticsRetentionInDays": {
              "type": "int",
              "defaultValue": 30
            },
            "dataCollectionRuleName": {
              "type": "string",
              "defaultValue": "dcr-VmInsights"
            }
          },
          "functions": [],
          "variables": {
            "vmInsightsName": "[format('VMInsights({0})', parameters('logAnalyticsWorkspaceName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[parameters('logAnalyticsSku')]"
                },
                "retentionInDays": "[parameters('logAnalyticsRetentionInDays')]"
              }
            },
            {
              "type": "Microsoft.Insights/dataCollectionRules",
              "apiVersion": "2021-04-01",
              "name": "[parameters('dataCollectionRuleName')]",
              "location": "[parameters('location')]",
              "properties": {
                "description": "Data collection rule for VM Insights",
                "dataSources": {
                  "performanceCounters": [
                    {
                      "name": "VMInsightsPerfCounters",
                      "streams": [
                        "Microsoft-InsightsMetrics"
                      ],
                      "samplingFrequencyInSeconds": 60,
                      "counterSpecifiers": [
                        "\\VmInsights\\DetailedMetrics"
                      ]
                    }
                  ],
                  "extensions": [
                    {
                      "streams": [
                        "Microsoft-ServiceMap"
                      ],
                      "extensionName": "DependencyAgent",
                      "name": "DependencyAgentDataSource"
                    }
                  ]
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                      "name": "VMInsightsPerf-Logs-Dest"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Microsoft-InsightsMetrics"
                    ],
                    "destinations": [
                      "VMInsightsPerf-Logs-Dest"
                    ]
                  },
                  {
                    "streams": [
                      "Microsoft-ServiceMap"
                    ],
                    "destinations": [
                      "VMInsightsPerf-Logs-Dest"
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationsManagement/solutions",
              "apiVersion": "2015-11-01-preview",
              "name": "[variables('vmInsightsName')]",
              "location": "[parameters('location')]",
              "plan": {
                "name": "[variables('vmInsightsName')]",
                "product": "OMSGallery/VMInsights",
                "publisher": "Microsoft",
                "promotionCode": ""
              },
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2022-01-31-preview",
              "name": "id-StarterKitVMs",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2022-01-31-preview",
              "name": "id-AzureMonitorAgent",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.blob]"
            },
            "dataCollectionRuleName": {
              "type": "string",
              "value": "[parameters('dataCollectionRuleName')]"
            },
            "vmManagedIdentityResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-StarterKitVMs')]"
            },
            "amaManagedIdentityResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-AzureMonitorAgent')]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "backup-and-monitoring-policies",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "recoveryVaultPolicyId": {
            "value": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('recoveryServicesVaultName'), variables('recoveryVaultPolicyName'))]"
          },
          "logAnalyticsResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "recoveryVaultPolicyId": {
              "type": "string"
            },
            "logAnalyticsResourceId": {
              "type": "string"
            },
            "backupPolicyName": {
              "type": "string",
              "defaultValue": "Backup VMs"
            },
            "backupPolicyDefinitionId": {
              "type": "string",
              "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/09ce66bc-1220-4153-8104-e3f51c936913"
            },
            "monitoringPolicyName": {
              "type": "string",
              "defaultValue": "Monitor VMSS"
            },
            "monitoringPolicyDefinitionId": {
              "type": "string",
              "defaultValue": "/providers/Microsoft.Authorization/policyDefinitions/c7f3bf36-b807-4f18-82dc-f480ad713635"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2022-06-01",
              "name": "[parameters('backupPolicyName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "policyDefinitionId": "[parameters('backupPolicyDefinitionId')]",
                "parameters": {
                  "vaultLocation": {
                    "value": "[parameters('location')]"
                  },
                  "backupPolicyId": {
                    "value": "[parameters('recoveryVaultPolicyId')]"
                  }
                },
                "resourceSelectors": [
                  {
                    "name": "Resources to be monitored",
                    "selectors": [
                      {
                        "kind": "resourceType",
                        "in": [
                          "Microsoft.Compute/virtualMachines"
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(format('{0}-windows-vmcontributor', parameters('backupPolicyName')))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', parameters('backupPolicyName')), '2022-06-01', 'full').identity.principalId]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyAssignments', parameters('backupPolicyName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(format('{0}-windows-backupcontributor', parameters('backupPolicyName')))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', parameters('backupPolicyName')), '2022-06-01', 'full').identity.principalId]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '5e467623-bb1f-42f4-a55d-6e525e11384b')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyAssignments', parameters('backupPolicyName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2022-06-01",
              "name": "[parameters('monitoringPolicyName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "policyDefinitionId": "[parameters('monitoringPolicyDefinitionId')]",
                "parameters": {
                  "workspaceResourceId": {
                    "value": "[parameters('logAnalyticsResourceId')]"
                  },
                  "userGivenDcrName": {
                    "value": "ama-vmi-vmss"
                  },
                  "enableProcessesAndDependencies": {
                    "value": true
                  }
                },
                "resourceSelectors": [
                  {
                    "name": "Resources to be monitored",
                    "selectors": [
                      {
                        "kind": "resourceType",
                        "in": [
                          "Microsoft.Compute/virtualMachineScaleSets"
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(format('{0}-windows-monitoringcontributor', parameters('monitoringPolicyName')))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', parameters('monitoringPolicyName')), '2022-06-01', 'full').identity.principalId]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyAssignments', parameters('monitoringPolicyName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(format('{0}-windows-loganalyticscontributor', parameters('monitoringPolicyName')))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', parameters('monitoringPolicyName')), '2022-06-01', 'full').identity.principalId]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyAssignments', parameters('monitoringPolicyName'))]"
              ]
            }
          ],
          "outputs": {
            "backupPolicyDefinitionId": {
              "type": "string",
              "value": "[parameters('backupPolicyDefinitionId')]"
            },
            "backupPolicyAssignmentId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Authorization/policyAssignments', parameters('backupPolicyName'))]"
            },
            "monitoringPolicyDefinitionId": {
              "type": "string",
              "value": "[parameters('monitoringPolicyDefinitionId')]"
            },
            "monitoringPolicyAssignmentId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Authorization/policyAssignments', parameters('monitoringPolicyName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vm-scale-set",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmScaleSetName": {
            "value": "[variables('vmScaleSetName')]"
          },
          "vNetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'vnet-with-bastion'), '2019-10-01').outputs.vNetName.value]"
          },
          "vmSubnetName": {
            "value": "[parameters('vmSubnetName')]"
          },
          "loggingStorageUri": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.storageUri.value]"
          },
          "vmNamePrefix": {
            "value": "[parameters('vmNamePrefix')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "loadBalancerName": {
            "value": "[parameters('loadBalancerName')]"
          },
          "loadBalancerBackendPoolName": {
            "value": "[variables('loadBalancerBackendPoolName')]"
          },
          "vmManagedIdentityResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.vmManagedIdentityResourceId.value]"
          },
          "amaManagedIdentityResourceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure'), '2019-10-01').outputs.amaManagedIdentityResourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "vmScaleSetName": {
              "type": "string"
            },
            "vNetName": {
              "type": "string"
            },
            "vmSubnetName": {
              "type": "string"
            },
            "loggingStorageUri": {
              "type": "string"
            },
            "vmNamePrefix": {
              "type": "string"
            },
            "vmSize": {
              "type": "string"
            },
            "adminUsername": {
              "type": "string"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "loadBalancerName": {
              "type": "string"
            },
            "loadBalancerBackendPoolName": {
              "type": "string"
            },
            "vmManagedIdentityResourceId": {
              "type": "string"
            },
            "amaManagedIdentityResourceId": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachineScaleSets",
              "apiVersion": "2022-08-01",
              "name": "[parameters('vmScaleSetName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('vmSize')]",
                "tier": "Standard",
                "capacity": 3
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[parameters('vmManagedIdentityResourceId')]": {}
                }
              },
              "properties": {
                "singlePlacementGroup": false,
                "orchestrationMode": "Flexible",
                "platformFaultDomainCount": 1,
                "virtualMachineProfile": {
                  "storageProfile": {
                    "imageReference": {
                      "publisher": "MicrosoftWindowsServer",
                      "offer": "WindowsServer",
                      "sku": "2022-datacenter-azure-edition-core",
                      "version": "latest"
                    },
                    "osDisk": {
                      "managedDisk": {
                        "storageAccountType": "Premium_LRS"
                      },
                      "caching": "ReadWrite",
                      "createOption": "FromImage"
                    }
                  },
                  "networkProfile": {
                    "networkApiVersion": "2020-11-01",
                    "networkInterfaceConfigurations": [
                      {
                        "name": "nic",
                        "properties": {
                          "primary": true,
                          "ipConfigurations": [
                            {
                              "name": "ipconfig1",
                              "properties": {
                                "subnet": {
                                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('vmSubnetName'))]"
                                },
                                "loadBalancerBackendAddressPools": [
                                  {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), parameters('loadBalancerBackendPoolName'))]"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "osProfile": {
                    "computerNamePrefix": "[parameters('vmNamePrefix')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                      "provisionVMAgent": true,
                      "patchSettings": {
                        "patchMode": "AutomaticByPlatform",
                        "enableHotpatching": true
                      },
                      "enableAutomaticUpdates": true
                    }
                  },
                  "diagnosticsProfile": {
                    "bootDiagnostics": {
                      "enabled": true,
                      "storageUri": "[parameters('loggingStorageUri')]"
                    }
                  },
                  "extensionProfile": {
                    "extensions": [
                      {
                        "name": "InstallIIS",
                        "properties": {
                          "publisher": "Microsoft.Compute",
                          "type": "CustomScriptExtension",
                          "typeHandlerVersion": "1.7",
                          "autoUpgradeMinorVersion": true,
                          "settings": {
                            "commandToExecute": "powershell.exe Install-WindowsFeature -name Web-Server -IncludeManagementTools && powershell.exe remove-item 'C:\\inetpub\\wwwroot\\iisstart.htm' && powershell.exe Add-Content -Path 'C:\\inetpub\\wwwroot\\iisstart.htm' -Value $('Hello World from ' + $env:computername)"
                          }
                        }
                      },
                      {
                        "name": "HealthExtension",
                        "properties": {
                          "publisher": "Microsoft.ManagedServices",
                          "type": "ApplicationHealthWindows",
                          "typeHandlerVersion": "1.0",
                          "autoUpgradeMinorVersion": true,
                          "settings": {
                            "protocol": "http",
                            "port": 80,
                            "requestPath": "http://127.0.0.1",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 1
                          }
                        }
                      },
                      {
                        "name": "DependencyAgentWindows",
                        "properties": {
                          "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                          "type": "DependencyAgentWindows",
                          "typeHandlerVersion": "9.5",
                          "autoUpgradeMinorVersion": true,
                          "settings": {
                            "enableAMA": true
                          }
                        }
                      },
                      {
                        "name": "AzureMonitorWindowsAgent",
                        "properties": {
                          "publisher": "Microsoft.Azure.Monitor",
                          "type": "AzureMonitorWindowsAgent",
                          "typeHandlerVersion": "1.0",
                          "autoUpgradeMinorVersion": true,
                          "enableAutomaticUpgrade": true,
                          "settings": {
                            "authentication": {
                              "managedIdentity": {
                                "identifier-name": "mi_res_id",
                                "identifier-value": "[parameters('amaManagedIdentityResourceId')]"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "zones": [
                "1",
                "2",
                "3"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'monitoring-infrastructure')]",
        "[resourceId('Microsoft.Resources/deployments', 'backup-and-monitoring-policies')]",
        "[resourceId('Microsoft.Resources/deployments', 'vnet-with-bastion')]"
      ]
    }
  ],
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.126.58533",
      "templateHash": "10681648232120125031"
    }
  }
}